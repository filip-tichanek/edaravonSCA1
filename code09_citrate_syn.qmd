---
title: "Experimental treatment with edaravone in a mouse model of spinocerebellar ataxia 1"
subtitle: "Citrate synthase activity"
author: "Martina Sucha, Simona Benediktova, Filip Tichanek, Jan Jedlicka, Stepan Kapl, Dana Jelinkova, Zdenka Purkartova, Jan Tuma, Jitka Kuncova, Jan Cendelin"
format: 
  html:
    embed-resources: true
    keep-md: true
    toc: true
    toc-depth: 4
    toc-location: left
    number-sections: true
    number-depth: 4
    code-fold: false
    code-summary: "Open code"
editor: visual
project:
  type: default
  output-dir: output
theme: sandstone
fontsize: 13.5px
---

This page shows R code for the study [Sucha et al.](https://www.mdpi.com/1422-0067/24/13/10689) (2023, *International Journal of Molecular Science*).

**Citation**:

> Sucha M, Benediktova S, Tichanek F, Jedlicka J, Kapl S, Jelinkova D, Purkartova Z, Tuma J, Kuncova J, Cendelin J. Experimental Treatment with Edaravone in a Mouse Model of Spinocerebellar Ataxia 1. International Journal of Molecular Sciences. 2023; 24(13):10689. https://doi.org/10.3390/ijms241310689

[GitHub page](https://github.com/filip-tichanek/edaravonSCA1): https://github.com/filip-tichanek/edaravonSCA1

Citrate synthase activity is related to mitochondria abundance and was assessed in cerebellar (***cb***) and hippocampal (***hp***) tissue. There are 2 technical replicates per animal. The factor of animal (*id*) will thus represent random-intercept.

# Upload of packages

```{r}
rm(list = ls())

suppressWarnings(suppressMessages( {
library(brms)
library(beeswarm)
library(vioplot)
library(glmmTMB)
library(car)
library(cowplot)
library(ggplot2)
library(tidyverse)
library(bayesplot)
library(gtsummary)
library(vegan)
library(knitr)  
library(ggplot2)  
  } ) )
```

# Data upload and wrangling

```{r}

## Data upload
load("source_data/myEnvironment.RData")

## defining new variable
csyn$sex_num <- ifelse(csyn$sex=="F",-0.5,0.5)
csyn$group_sex <- interaction(csyn$group, csyn$sex)
csyn$group_sex <- factor(csyn$group_sex,
                         levels=c('ctrl.wt.F','ctrl.wt.M',
                                  'eda.wt.F','eda.wt.M',
                                  'ctrl.sca.F','ctrl.sca.M',
                                  'eda.sca.F','eda.sca.M'))

## subsetting cerebellar and hippocampal datasets
csyn_hp <- subset(csyn, csyn$tissue == 'hippocampus')
csyn_cb <- subset(csyn, csyn$tissue == 'cerebellum')

## data summary
summary(csyn)
```

# Data exploration

```{r, fig.height=9, fig.width=7}
## setting spacing
par(mfrow=c(3,2))
par(mar=c(4,3.5,1,1))
par(mgp=c(4,0.6,0))

## both sex together
plot(csyn_hp$cs~csyn_hp$group,
     col=cola, cex.axis=0.8)

plot(csyn_cb$cs~csyn_cb$group,
     col=cola, cex.axis=0.8)

## by both group and sex
plot(csyn_hp$cs~csyn_hp$group_sex,
     col=cola[c(1,1,2,2,3,3,4,4)],cex.axis=0.8, las=2)

plot(csyn_cb$cs~csyn_cb$group_sex,
     col=cola[c(1,1,2,2,3,3,4,4)],cex.axis=0.8, las=2)

## data distribution
hist(csyn_hp$cs, 12)
hist(csyn_cb$cs, 12)

```

There is no apparent sex effect. As the distribution seems slightly asymmetric, we will use gamma likelihood.

# Hippocampus

## Modelling

### Prior specification

Data summary

```{r}
## mean
mean(log(csyn_hp$cs))

## SDs
sd(log(csyn_hp$cs))*5
sd(log(csyn_hp[csyn_hp$genotype == 'sca',]$cs))*5
```

Setting priors

```{r}
  prior01 <- c(set_prior("student_t(3, -4.34, 1.24)", class = "b", coef = "Intercept"),
               set_prior("normal(0, 2)", class = "b", coef = "groupctrl.wt"),
               set_prior("normal(0, 2)", class = "b", coef = "groupeda.wt"),
               set_prior("normal(0, 1.2)", class = "b", coef = "groupeda.sca"))
```

### Model fit and diagnostics

```{r}
## model fit
m_csyn_hp <- run_model(
           brm(cs~0+Intercept+group+ (1|id),
                  data=csyn_hp, prior = prior01,
                  family=Gamma(link='log'),
                  save_pars = save_pars(all = TRUE),
                  iter=8000, warmup=2000,chains=2,cores=2,seed=17,
                  control = list(adapt_delta = 0.99)),
             'output/brm/m_csyn_hp', reuse = TRUE)

## chains mixing and convergence
mcmc_trace(m_csyn_hp, pars = c('b_Intercept',
                               'b_groupctrl.wt',
                               'b_groupeda.wt',
                               'b_groupeda.sca'))

## model summary
summary(m_csyn_hp)
```

Convergence is fine, chains are well mixed, Rhat values are 1, ESS sufficient

### PPC

```{r}
pp_check(m_csyn_hp,type='dens_overlay',ndraws = 50)
pp_check(m_csyn_hp,type='dens_overlay_grouped',ndraws = 50,group='group')
pp_check(m_csyn_hp,type='scatter_avg', ndraws = 50)
pp_check(m_csyn_hp,type="stat_2d", stat = c("max", "min"),ndraws=100)
pp_check(m_csyn_hp,type="stat_2d", stat = c("mean", "sd"),ndraws=100)
```

PPC seems fine

### Posterior draws extraction

```{r}
post_fix_hp<-as.data.frame(m_csyn_hp, variable = c("b_Intercept","b_groupctrl.wt",
                                                   "b_groupeda.wt","b_groupeda.sca"))
names(post_fix_hp)[1]<-"sca_ctrl"

post_fix_hp$wt_ctrl<-post_fix_hp$sca_ctrl+post_fix_hp$b_groupctrl.wt
post_fix_hp$wt_eda<-post_fix_hp$sca_ctrl+post_fix_hp$b_groupeda.wt
post_fix_hp$sca_eda<-post_fix_hp$sca_ctrl+post_fix_hp$b_groupeda.sca
post_fix_hp$wt_contrast<-post_fix_hp$wt_eda-post_fix_hp$wt_ctrl
summary(post_fix_hp)
```

## Data and model visualization

In data visualization, individual points represent average per subject. Violin plot (area indicating data distribution) was, in contrast, constructed on the basis of individual data points (non-averaged, 1 animals thus generated two data-points)

```{r, fig.height=4.11, fig.width=7.5}

suppressWarnings(suppressMessages( {
range<-c(0,0.04);scal<-range[2]-range[1]

groupquant<-sapply(post_fix_hp[,c(5,6,1,7)],function(p) quantile(p, probs = c(0.025,0.975,0.5)))
groupquant<-exp(groupquant)

par(mfrow=c(1,2))
par(mar=c(2,3,0.2,0.2))
par(mgp=c(2,0.6,0))


csyn_hp$group<-factor(csyn_hp$group,levels=c('ctrl.wt', 'eda.wt','ctrl.sca','eda.sca'))


xrange<-c(0.5,4.5);xscal=xrange[2]-xrange[1]
plot(NULL,xlim=c(xrange[1],xrange[2]),ylim=c(range[1],range[2]),xlab="",
     ylab="Citrate synthase in hippocampus",las=1, axes=FALSE,cex.lab=1.1)

rect(xrange[1],range[2],xrange[2],range[1],col="grey92",border=NA)
x<-range[1]
repeat{
  lines(c(xrange[1],xrange[2]),c(x,x),col="white",lwd=0.7)
  x=x+0.01;if(x>range[2]){break}}

x<-0
repeat{
  lines(c(x,x),c(range[1],range[2]),col="white",lwd=0.7)
  x=x+1;if(x>3.5){break}}

vioplot(csyn_hp$cs~csyn_hp$group,col=colb,at=c(1:4),add=T,
        border=cola,axes=FALSE,drawRect=F,lwd=1,wex=0.8)

csyn_hp_sum <- csyn_hp %>% group_by(id, group, sex_num) %>% summarize(cbcsl = mean(cs))

beeswarm(csyn_hp_sum$cbcsl~csyn_hp_sum$group,col=cola, at=c(1:4),
         add=T,pwpch=(16.5+csyn_hp_sum$sex_num), cex=1.2 )

tp<-(groupquant[3,])
xx<-1;wid=0.25
repeat{
  lines(c(xx-wid,xx+wid),c(tp[xx],tp[xx]),lwd=2,col="black");
  lines(c(xx,xx),c(groupquant[1,xx],groupquant[2,xx]),lwd=1.7,col="black")
  xx<-xx+1
  if(xx>4){break}}

tckk=-0.02

axis(2,las=2,cex.axis=1.1,at = seq(range[1],range[2],by=0.01),
     pos=xrange[1], tck=tckk)


axis(side=1,las=1,cex.axis=1.1,at=c(seq(1,4,by=1)),
     labels=c(rep("",length(seq(1,4,by=1)))),pos=range[1],tck=tckk)
lines(c(xrange[1],xrange[2]),c(range[1],range[1]))
text(c(1:4),c(rep(range[1]-0.046*scal,3)),xpd=T,cex=1.1,col=cola,
     c("Wt","Wt", "SCA1", "SCA1"))
ypo<-c(range[1]-0.1*scal,range[1]-0.1*scal)
text(c(1:4),c(ypo[1],ypo[2],ypo[1],ypo[2]),xpd=T,cex=1.1,col=cola,
     c("0", "0", "edv"))

ypos<-0.038
xpos=1
points(xpos,ypos,pch=16,cex=1.4,col=rgb(0.4,0.4,0.4,alpha=0.6))
text(xpos+0.24*xscal,ypos,"Females",col="grey40",cex=1.2)
points(xpos,ypos-0.08*scal,pch=17,cex=1.4,col=rgb(0.4,0.4,0.4,alpha=0.6))
text(xpos+0.24*xscal,ypos-0.08*scal,"Males",col="grey40",cex=1.2)

### probability distributions --------
ypos<-0.6;xpos=1
range=c(0, 24)
scal = 12
par(mar=c(2.2,1,0,0))
dif<-data.frame(post_fix_hp$wt_contrast,post_fix_hp$b_groupeda.sca,
                post_fix_hp$b_groupctrl.wt)
dif<-exp(dif)

yla<- "Fold-difference in CS in HP"
tckk=-0.018
ste<-seq(0.4,1.7,by=0.2)
mons_poste(dif,1)

zpos=seq(0,1,1/3)
xx=1;ind=0.4;xpol<-0.65
text(xpol,zpos[xx]+zpos[2]*ind,
     "Wt: ed x 0 ",cex=1)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "SCA1: ed x 0 ",cex=1)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "0: Wt x SCA1",cex=1)

} ) )
```

# Cerebellum

## Modelling

### Prior specification

Data summary

```{r}
## mean
mean(log(csyn_cb$cs))

## SDs
sd(log(csyn_cb$cs))*5
sd(log(csyn_cb[csyn_cb$genotype == 'sca',]$cs))*5
```

Setting priors

```{r}
  prior01 <- c(set_prior("student_t(3, -4.56, 1.2)", class = "b", coef = "Intercept"),
               set_prior("normal(0, 2)", class = "b", coef = "groupctrl.wt"),
               set_prior("normal(0, 2)", class = "b", coef = "groupeda.wt"),
               set_prior("normal(0, 1.2)"  , class = "b", coef = "groupeda.sca"))
```

### Model fit and diagnostics

```{r}
## model fit
m_csyn_cb <- run_model(
           brm(cs~0+Intercept+group+ (1|id),
                  data=csyn_cb, prior = prior01,
                  family=Gamma(link='log'),
                  save_pars = save_pars(all = TRUE),
                  iter=8000, warmup=2000,chains=2,cores=2,seed=17,
                  control = list(adapt_delta = 0.99)),
             'output/brm/m_csyn_cb', reuse = TRUE)

## chains mixing and convergence
mcmc_trace(m_csyn_cb, pars = c('b_Intercept',
                               'b_groupctrl.wt',
                               'b_groupeda.wt',
                               'b_groupeda.sca'))

## model summary
summary(m_csyn_cb)
```

Convergence is fine, chains are well mixed, Rhat values are 1, ESS sufficient

### PPC

```{r}
pp_check(m_csyn_cb,type='dens_overlay',ndraws = 50)
pp_check(m_csyn_cb,type='dens_overlay_grouped',ndraws = 50,group='group')
pp_check(m_csyn_cb,type='scatter_avg', ndraws = 50)
pp_check(m_csyn_cb,type="stat_2d", stat = c("max", "min"),ndraws=100)
pp_check(m_csyn_cb,type="stat_2d", stat = c("mean", "sd"),ndraws=100)
```

PPC seems fine

### Posterior draws extraction

```{r}
post_fix_cb<-as.data.frame(m_csyn_cb, variable = c("b_Intercept","b_groupctrl.wt",
                                                   "b_groupeda.wt","b_groupeda.sca"))
names(post_fix_cb)[1]<-"sca_ctrl"

post_fix_cb$wt_ctrl<-post_fix_cb$sca_ctrl+post_fix_cb$b_groupctrl.wt
post_fix_cb$wt_eda<-post_fix_cb$sca_ctrl+post_fix_cb$b_groupeda.wt
post_fix_cb$sca_eda<-post_fix_cb$sca_ctrl+post_fix_cb$b_groupeda.sca
post_fix_cb$wt_contrast<-post_fix_cb$wt_eda-post_fix_cb$wt_ctrl
summary(post_fix_cb)
```

## Data and model visualization

In data visualization, individual points represent average per subject. Violin plot (area indicating data distribution) was, in contrast, constructed on the basis of individual data points (non-averaged, 1 animals thus generated two data-points)

```{r, fig.height=4.11, fig.width=7.5}

suppressWarnings(suppressMessages( {
range<-c(0,0.04);scal<-range[2]-range[1]

groupquant<-sapply(post_fix_cb[,c(5,6,1,7)],function(p) quantile(p, probs = c(0.025,0.975,0.5)))
groupquant<-exp(groupquant)

par(mfrow=c(1,2))
par(mar=c(2,3,0.2,0.2))
par(mgp=c(2,0.6,0))


csyn_cb$group<-factor(csyn_cb$group,levels=c('ctrl.wt', 'eda.wt','ctrl.sca','eda.sca'))


xrange<-c(0.5,4.5);xscal=xrange[2]-xrange[1]
plot(NULL,xlim=c(xrange[1],xrange[2]),ylim=c(range[1],range[2]),xlab="",
     ylab="Citrate synthase in cerebellum",las=1, axes=FALSE,cex.lab=1.1)

rect(xrange[1],range[2],xrange[2],range[1],col="grey92",border=NA)
x<-range[1]
repeat{
  lines(c(xrange[1],xrange[2]),c(x,x),col="white",lwd=0.7)
  x=x+0.01;if(x>range[2]){break}}

x<-0
repeat{
  lines(c(x,x),c(range[1],range[2]),col="white",lwd=0.7)
  x=x+1;if(x>3.5){break}}

vioplot(csyn_cb$cs~csyn_cb$group,col=colb,at=c(1:4),add=T,
        border=cola,axes=FALSE,drawRect=F,lwd=1,wex=0.8)

csyn_cb_sum <- csyn_cb %>% group_by(id, group, sex_num) %>% summarize(cbcsl = mean(cs))


beeswarm(csyn_cb_sum$cbcsl~csyn_cb_sum$group,col=cola, at=c(1:4),
         add=T,pwpch=(16.5+csyn_cb_sum$sex_num), cex=1.2 )

tp<-(groupquant[3,])
xx<-1;wid=0.25
repeat{
  lines(c(xx-wid,xx+wid),c(tp[xx],tp[xx]),lwd=2,col="black");
  lines(c(xx,xx),c(groupquant[1,xx],groupquant[2,xx]),lwd=1.7,col="black")
  xx<-xx+1
  if(xx>4){break}}

tckk=-0.02

axis(2,las=2,cex.axis=1.1,at = seq(range[1],range[2],by=0.01),
     pos=xrange[1], tck=tckk)


axis(side=1,las=1,cex.axis=1.1,at=c(seq(1,4,by=1)),
     labels=c(rep("",length(seq(1,4,by=1)))),pos=range[1],tck=tckk)
lines(c(xrange[1],xrange[2]),c(range[1],range[1]))
text(c(1:4),c(rep(range[1]-0.046*scal,3)),xpd=T,cex=1.1,col=cola,
     c("Wt","Wt", "SCA1", "SCA1"))
ypo<-c(range[1]-0.1*scal,range[1]-0.1*scal)
text(c(1:4),c(ypo[1],ypo[2],ypo[1],ypo[2]),xpd=T,cex=1.1,col=cola,
     c("0", "0", "edv"))

ypos<-0.038
xpos=1
points(xpos,ypos,pch=16,cex=1.4,col=rgb(0.4,0.4,0.4,alpha=0.6))
text(xpos+0.24*xscal,ypos,"Females",col="grey40",cex=1.2)
points(xpos,ypos-0.08*scal,pch=17,cex=1.4,col=rgb(0.4,0.4,0.4,alpha=0.6))
text(xpos+0.24*xscal,ypos-0.08*scal,"Males",col="grey40",cex=1.2)

### probability distributions --------
ypos<-0.6;xpos=1
range=c(0, 24)
scal = 12
par(mar=c(2.2,1,0,0))
dif<-data.frame(post_fix_cb$wt_contrast,post_fix_cb$b_groupeda.sca,
                post_fix_cb$b_groupctrl.wt)
dif<-exp(dif)

yla<- "Fold-difference in CS in cb"
tckk=-0.018
ste<-seq(0.4,1.7,by=0.2)
mons_poste(dif,1)

zpos=seq(0,1,1/3)
xx=1;ind=0.4;xpol<-0.62
text(xpol,zpos[xx]+zpos[2]*ind,
     "Wt: ed x 0 ",cex=1)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "SCA1: ed x 0 ",cex=1)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "0: Wt x SCA1",cex=1)

} ) )
```

In conclusion, there is neither evidence for the effect of genotype nor edaravone in terms of citrate synthase activity.

# Session info

```{r}
sessionInfo()
```
