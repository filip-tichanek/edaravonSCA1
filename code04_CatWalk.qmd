---
title: "Experimental treatment with edaravone in a mouse model of spinocerebellar ataxia 1"
subtitle: "Analysis of gait abnormalities (CatWalk)"
author: "Martina Sucha, Simona Benediktova, Filip Tichanek, Jan Jedlicka, Stepan Kapl, Dana Jelinkova, Zdenka Purkartova, Jan Tuma, Jitka Kuncova, Jan Cendelin"
format: 
  html:
    embed-resources: true
    keep-md: true
    toc: true
    toc-depth: 4
    toc-location: left
    number-sections: true
    number-depth: 4
    code-fold: false
    code-summary: "Open code"
editor: visual
project:
  type: default
  output-dir: output
theme: sandstone
fontsize: 13.5px
---

This page shows R code for the study [Sucha et al.](https://www.mdpi.com/1422-0067/24/13/10689) (2023, *International Journal of Molecular Science*).

**Citation**:

> Sucha M, Benediktova S, Tichanek F, Jedlicka J, Kapl S, Jelinkova D, Purkartova Z, Tuma J, Kuncova J, Cendelin J. Experimental Treatment with Edaravone in a Mouse Model of Spinocerebellar Ataxia 1. International Journal of Molecular Sciences. 2023; 24(13):10689. https://doi.org/10.3390/ijms241310689

[GitHub page](https://github.com/filip-tichanek/edaravonSCA1): https://github.com/filip-tichanek/edaravonSCA1

# Upload of packages

```{r}
rm(list = ls())

suppressWarnings(suppressMessages( {
library(brms)
library(beeswarm)
library(vioplot)
library(glmmTMB)
library(car)
library(cowplot)
library(ggplot2)
library(tidyverse)
library(bayesplot)
library(gtsummary)
library(vegan)
library(knitr)  
  } ) )
```

# Data import, wrangling and summarization
```{r}
## import of data
load("source_data/myEnvironment.RData")

## selection of gait parameters
names(behav)
catwalk <- behav[,c(1,105:107,seq(52,84,by=2),seq(51,83,by=2),85:88,98:104,92:93,96:97)]
names(catwalk)[5:53]

## summary of gait parameters
catwalk2 <- catwalk[,c(2, 5:53)]
catwalk2 %>% tbl_summary(by = 'group') %>% add_p() %>% add_q(method = "fdr")
```

Transformation of gait parameters (proportions by logit, SD of gait parameters with log-transformation)
```{r}
## tranformation
catwalk[,c(5:21)]<-log(catwalk[,c(5:21)])
catwalk[,c(39:49)]<- logit( (catwalk[,c(39:49)]/100) +0.01)

## scaling
catwalk[,5:53]<-scale(catwalk[,5:53])

## getting principal components and % explained variance
pca<-princomp(catwalk[,5:53])
plot(pca)

round( ((pca$sdev**2)/sum(pca$sdev**2)),3)
sum( round( ((pca$sdev**2)/sum(pca$sdev**2)),3) [1:3])

## extraction the PCs as another variables
catwalk$pca1<- c(scale(pca$scores[,1])) 
catwalk$pca2<- c(scale(pca$scores[,2]))
catwalk$pca3<- c(scale(pca$scores[,3]))
```
3 principal components represent majority of variability in data of gait



## data exploration

```{r, fig.height=5, fig.width=8.5}

## setting spacing
par(mar=c(7,3.5,1,1))
par(mgp=c(5,0.7,0))
par(mfrow = c(1,3))

## plotting values of the 3 main PCs across groups
plot(catwalk$pca1~catwalk$group_sex,
     col=cola[c(1,1,2,2,3,3,4,4)], las=2)
plot(catwalk$pca2~catwalk$group_sex,
     col=cola[c(1,1,2,2,3,3,4,4)], las=2)
plot(catwalk$pca3~catwalk$group_sex,
     col=cola[c(1,1,2,2,3,3,4,4)], las=2)

par(mfrow = c(1, 3))
plot(catwalk$pca1~catwalk$group,col=cola, las=2)
plot(catwalk$pca2~catwalk$group,col=cola, las=2)
plot(catwalk$pca3~catwalk$group,col=cola, las=2)
```


Integration of PCs score to general table and assessing their correlations with individual gait parameters
```{r}
## Extraction
behav$walk_pc1<- c(scale(pca$scores[,1])) 
behav$walk_pc2<- c(scale(pca$scores[,2]))
behav$walk_pc3<- c(scale(pca$scores[,3]))


## Correlation of PCs with gait parameters
cor1<-c(cor(catwalk$pca1,catwalk[,5:53],method="pearson"))
cor2<-c(cor(catwalk$pca2,catwalk[,5:53],method="pearson"))
cor3<-c(cor(catwalk$pca3,catwalk[,5:53],method="pearson"))


pc_gait_cor<-data.frame(cbind(names(catwalk[,5:53]),
                              cor1,cor2,cor3))
pc_gait_cor$cor1<-as.numeric(pc_gait_cor$cor1)
pc_gait_cor$cor2<-as.numeric(pc_gait_cor$cor2)
pc_gait_cor$cor3<-as.numeric(pc_gait_cor$cor3)

pc_gait_cor<-data.frame(parameter = pc_gait_cor$V1,
PC1_cor = cor1, 
PC2_cor = cor2,
PC3_cor = cor3)

## Correlations of all axes with all parameters
knitr::kable(pc_gait_cor)

## correlates of PC1
knitr::kable(pc_gait_cor[abs(pc_gait_cor$PC1_cor)>0.75,])

## Correlates of PC2
knitr::kable(pc_gait_cor[abs(pc_gait_cor$PC2_cor)>0.75,])

## correlates of PC3
knitr::kable(pc_gait_cor[abs(pc_gait_cor$PC3_cor)>0.55,])
```



# Modelling
Statistical analysis will consist from 2 parts:

- (i) Multivariate analysis in frequentist framework, using PERMANOVA
- (ii) Bayesian multivariate regression

1st part will assees which groups differed 'statistically significanlty' in terms of conglomerate of all parameters

2nd part will employ Bayesian regression and will estimate how much the groups differ in terms of the three main principal components (PCs explaining together majority of variance in the gait data)

As the overall structure of gait is affected by walk speed (which differ between WT and SCA1 mice, but also differ substatially from animal to animal), the 2nd analysis will be also validated with fitting same model but adjusted for speed (walk speed will be included as a covariate)


## PERMANOVA
```{r}
## defining outcome
outcome <- catwalk[,5:53]

## PERMANOVA, all groups
if(file.exists('perm_all') == FALSE){
perm_all <- adonis2(outcome ~ group, data=catwalk, perm=999,method="euclidian")}
perm_all

### edaravon in SCA1
catwalk_sca<-subset(catwalk,catwalk$group=="ctrl.sca"|catwalk$group=="eda.sca")
outcome<-catwalk_sca[,5:53]
if(file.exists('perm_sca1') == FALSE){
perm_sca1 <- adonis2(outcome ~ group, data=catwalk_sca, perm=99999,method="euclidian") }
perm_sca1

### edaravon in WT -
catwalk_wt<-subset(catwalk,catwalk$group=="eda.wt"|catwalk$group=="ctrl.wt")
outcome<-catwalk_wt[,5:53]

if(file.exists('perm_wt') == FALSE){
perm_wt <- adonis2(outcome ~ group, data=catwalk_wt, perm=9999,method="euclidian") }
perm_wt

### geenotype in ctrl
set.seed(17)
catwalk_ctrl<-subset(catwalk,catwalk$group=="ctrl.sca"|catwalk$group=="ctrl.wt")
outcome<-catwalk_ctrl[,5:53]

if(file.exists('perm_ctrl') == FALSE){
perm_ctrl <- adonis2(outcome ~ group, data=catwalk_sca, perm=9999,method="euclidian")}
perm_ctrl
```
As seen, groups generally differ, with 'significant' difference between WT and SCA1 mice on saline. Edaravone treatment does not seem to have effect.

## Bayesian models - without speed adjustment 

### Priors and formulas
```{r}
## re-setting reference levels and creating new variable
behav$group <- relevel(behav$group,ref='ctrl.sca')
behav$speed <- scale(behav$Run_Average_Speed_.cm.s._Mean)

## formula
bf_pc1<-bf(walk_pc1~0+Intercept+group)
bf_pc2<-bf(walk_pc2~0+Intercept+group)
bf_pc3<-bf(walk_pc3~0+Intercept+group)

## prior
prior_1 <- get_prior(bf_pc1+bf_pc2+bf_pc3+
                      set_rescor(TRUE), data = behav,family=gaussian())
prior_1
prior_1$prior[c(4,6,10,12,16,18)]<-"normal(0,2)"
prior_1$prior[c(5,11,17)]<-"normal(0,1.2)"
prior_1$prior[c(7,13,19)]<-"student_t(3,0,5)"
```

### Model fit and diagnostics
```{r, fig.height=12, fig.width=16}

## without adjustment for speed
set.seed(17)
pc_mult1 <- run_model(
          brm(bf_pc1+bf_pc2+bf_pc3
              +set_rescor(TRUE),
              data=behav, prior = prior_1,
              family=gaussian(),
              save_pars = save_pars(all = TRUE),
              iter=8000, warmup=2000,chains=2,cores=1,seed=17,
              control = list(adapt_delta = 0.99)),
              'output/brm/pc_mult1', reuse = TRUE)

mcmc_trace(pc_mult1)          
summary(pc_mult1)
```

Convergence is fine


## Bayesian model with speed adjustment

### formula and prior

```{r}
bf_adj_pc1<-bf(walk_pc1~0+Intercept+group+s(speed,k=3))
bf_adj_pc2<-bf(walk_pc2~0+Intercept+group+s(speed,k=3))
bf_adj_pc3<-bf(walk_pc3~0+Intercept+group+s(speed,k=3))


prior_2 <- get_prior(bf_adj_pc1+bf_adj_pc2+bf_adj_pc3+
                       set_rescor(TRUE), data = behav,family=gaussian())
prior_2
prior_2$prior[c(4,6,13,15,22,24)]<-"normal(0,2)"
prior_2$prior[c(5,14,23)]<-"normal(0,1.2)"
prior_2$prior[c(7,16,25)]<-"student_t(3,0,5)"
prior_2$prior[c(8,17,26)]<-"normal(0,2)"
```

### Model fit and diagnostics
```{r, fig.height=12, fig.width=16}
pc_mult2 <- run_model(
          brm(bf_adj_pc1+bf_adj_pc2+bf_adj_pc3+
                   set_rescor(TRUE),
                 data=behav, prior = prior_2,
                 family=gaussian(),
                 save_pars = save_pars(all = TRUE),
                 iter=8000, warmup=2000,chains=2,cores=1,seed=17,
                 control = list(adapt_delta = 0.99)),
              'output/brm/pc_mult2', reuse = TRUE)

mcmc_trace(pc_mult2)
summary(pc_mult2)
```
Convergence is fine


### PPC and models compariron
```{r}
### Bayesian checking - without speed
pp_check(pc_mult1,type='dens_overlay',ndraws = 50,resp="walkpc1")
pp_check(pc_mult1,type='dens_overlay_grouped',ndraws = 50,group='group',resp="walkpc1")
pp_check(pc_mult1,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc1")
pp_check(pc_mult1,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc1")

pp_check(pc_mult1,type='dens_overlay',ndraws = 50,resp="walkpc2")
pp_check(pc_mult1,type='dens_overlay_grouped',ndraws = 50,group='group',resp="walkpc2")
pp_check(pc_mult1,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc2")
pp_check(pc_mult1,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc2")

pp_check(pc_mult1,type='dens_overlay',ndraws = 50,resp="walkpc3")
pp_check(pc_mult1,type='dens_overlay_grouped',ndraws = 50,group='group',resp="walkpc3")
pp_check(pc_mult1,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc3")
pp_check(pc_mult1,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc3")


### Bayesian checking -  speed included
pp_check(pc_mult2,type='dens_overlay',ndraws = 50,resp="walkpc1")
pp_check(pc_mult2,type='dens_overlay_grouped',ndraws = 200,group='group',resp="walkpc1")
pp_check(pc_mult2,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc1")
pp_check(pc_mult2,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc1")

pp_check(pc_mult2,type='dens_overlay',ndraws = 50,resp="walkpc2")
pp_check(pc_mult2,type='dens_overlay_grouped',ndraws = 50,group='group',resp="walkpc2")
pp_check(pc_mult2,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc2")
pp_check(pc_mult2,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc2")

pp_check(pc_mult2,type='dens_overlay',ndraws = 50,resp="walkpc3")
pp_check(pc_mult2,type='dens_overlay_grouped',ndraws = 50,group='group',resp="walkpc3")
pp_check(pc_mult2,type="stat_2d", stat = c("max", "min"),ndraws=100,resp="walkpc3")
pp_check(pc_mult2,type="stat_2d", stat = c("mean", "sd"),ndraws=200,resp="walkpc3")

plot(loo(pc_mult1));loo(pc_mult1)
plot(loo(pc_mult2));loo(pc_mult2)

### comparison of predictive ability via leave-one-out CV
pc_mult1 <- add_criterion(pc_mult1, criterion = "loo")
pc_mult2 <- add_criterion(pc_mult2, criterion = "loo")
loo_compare(pc_mult1,pc_mult2)
```
Models are generally OK. Speed adjustment highly improves predictive accuracy of model. 


# Visualisation

## PCA plot
```{r, fig.height=5.6, fig.width=6}
## plotting multidimensional-------------
behav$group<-factor(behav$group,levels=c('ctrl.wt','eda.wt','ctrl.sca','eda.sca'))

par(mfrow=c(1,1))
par(mar=c(2.5,2.5,0,0))
par(mgp=c(1.3,0.6,0))
range<-c(-2.2,1.8);scal<-range[2]-range[1]
xrange<-c(-2.8,4.2);xscal=xrange[2]-xrange[1]

plot(NULL,xlim=c(xrange[1],xrange[2]),ylim=c(range[1],range[2]),
     xlab="PC3 (explaining 12% of var.)",
     ylab="PC2 (explaining 27% of var.)",
     las=1, axes=FALSE,cex.lab=1)

rect(xrange[1],range[2],xrange[2],range[1],col="grey92",border=NA)
x<-range[1]
repeat{
  lines(c(xrange[1],xrange[2]),c(x,x),col="white",lwd=0.7)
  x=x+0.5;if(x>range[2]){break}}

x<-xrange[1]
repeat{
  lines(c(x,x),c(range[1],range[2]),col="white",lwd=0.7)
  x=x+0.5;if(x>xrange[2]){break}}


x=1
points(behav[behav$group=="ctrl.wt",]$walk_pc3,behav[behav$group=="ctrl.wt",]$walk_pc2,
       pch=16,col=colc[x],cex=2.3);x=x+1
points(behav[behav$group=="eda.wt",]$walk_pc3,behav[behav$group=="eda.wt",]$walk_pc2,
       pch=16,col=colc[x],cex=2.3);x=x+1
points(behav[behav$group=="ctrl.sca",]$walk_pc3,behav[behav$group=="ctrl.wt",]$walk_pc2,
       pch=16,col=colc[x],cex=2.3);x=x+1
points(behav[behav$group=="eda.sca",]$walk_pc3,behav[behav$group=="eda.wt",]$walk_pc2,
       pch=16,col=colc[x],cex=2.3);x=x+1

tckk=-0.02
axis(2,las=2,cex.axis=1,at=seq(range[1],range[2],by=0.5),
     labels=c(rep("",length(seq(range[1],range[2],by=0.5)))),pos=xrange[1],tck=tckk)
axis(2,las=2,cex.axis=1,at=seq(range[1],range[2],by=1),pos=xrange[1],tck=tckk)

axis(side=1,las=1,cex.axis=1.1,at=seq(xrange[1],xrange[2],by=0.5)
    ,pos=range[1],tck=tckk)

pos=range[1]+scal*0.27
xx=1;xp=1.7;lwd=1.6
pos1=xrange[1]+xscal*0.72
pos3=xrange[1]+xscal*0.97

rect(pos1,pos+0.03*scal,pos3,range[1]+0.035*scal,
     col="white",border="grey50",lwd=0.8)

ypos=0.8;xpos=xrange[1]+1.01*xscal;cons=0.065
text(xpos,range[1]+scal*ypos,expression(P[Wt_0  :  SCA1_0]~ '= 0.027'),pos=2);ypos=ypos-cons
text(xpos,range[1]+scal*ypos,expression(P[SCA1_0 : SCA1_eda]~ '= 0.2'),pos=2);ypos=ypos-cons
text(xpos,range[1]+scal*ypos,expression(P[Wt_0 : Wt_eda]~ '= 0.4'),pos=2)

## legend
pos=range[1]+scal*0.27
xx=1;xp=1.7;lwd=1.6
pos1=xrange[1]+xscal*0.72
pos3=xrange[1]+xscal*0.97
rect(pos1,pos+0.03*scal,pos3,range[1]+0.035*scal,
     col="white",border="grey50",lwd=0.8)

points(2.4,-1.15,pch=16,col=cola[xx],cex=2)
text(3.3,-1.15,"Wt_0",pch=16,col=cola[xx],cex=1.1);xx=xx+1

points(2.4,-1.4,pch=16,col=cola[xx],cex=2)
text(3.3,-1.4,"Wt_eda",pch=16,col=cola[xx],cex=1.1);xx=xx+1

points(2.4,-1.65,pch=16,col=cola[xx],cex=2)
text(3.3,-1.65,"SCA1_0",pch=16,col=cola[xx],cex=1.1);xx=xx+1

points(2.4,-1.9,pch=16,col=cola[xx],cex=2)
text(3.3,-1.9,"SCA1_eda",pch=16,col=cola[xx],cex=1.1);xx=xx+1

```

## Posterior draws extraction
```{r}

## Posterior extraction PC1
post_fix_na_pc1<-as.data.frame(pc_mult1, variable = c("b_walkpc1_Intercept","b_walkpc1_groupctrl.wt",
                                                       "b_walkpc1_groupeda.wt","b_walkpc1_groupeda.sca"))
names(post_fix_na_pc1)[1]<-"sca_ctrl"
post_fix_na_pc1$wt_ctrl<-post_fix_na_pc1$sca_ctrl+post_fix_na_pc1$b_walkpc1_groupctrl.wt
post_fix_na_pc1$wt_eda<-post_fix_na_pc1$sca_ctrl+post_fix_na_pc1$b_walkpc1_groupeda.wt
post_fix_na_pc1$sca_eda<-post_fix_na_pc1$sca_ctrl+post_fix_na_pc1$b_walkpc1_groupeda.sca
post_fix_na_pc1$wt_contrast<-post_fix_na_pc1$wt_eda-post_fix_na_pc1$wt_ctrl

post_fix_adj_pc1<-as.data.frame(pc_mult2, variable = c("b_walkpc1_Intercept","b_walkpc1_groupctrl.wt",
                                                   "b_walkpc1_groupeda.wt","b_walkpc1_groupeda.sca"))
names(post_fix_adj_pc1)[1]<-"sca_ctrl"
post_fix_adj_pc1$wt_ctrl<-post_fix_adj_pc1$sca_ctrl+post_fix_adj_pc1$b_walkpc1_groupctrl.wt
post_fix_adj_pc1$wt_eda<-post_fix_adj_pc1$sca_ctrl+post_fix_adj_pc1$b_walkpc1_groupeda.wt
post_fix_adj_pc1$sca_eda<-post_fix_adj_pc1$sca_ctrl+post_fix_adj_pc1$b_walkpc1_groupeda.sca
post_fix_adj_pc1$wt_contrast<-post_fix_adj_pc1$wt_eda-post_fix_adj_pc1$wt_ctrl


## Posterior extraction PC2
post_fix_na_pc2<-as.data.frame(pc_mult1, variable = c("b_walkpc2_Intercept","b_walkpc2_groupctrl.wt",
                                                      "b_walkpc2_groupeda.wt","b_walkpc2_groupeda.sca"))
names(post_fix_na_pc2)[1]<-"sca_ctrl"
post_fix_na_pc2$wt_ctrl<-post_fix_na_pc2$sca_ctrl+post_fix_na_pc2$b_walkpc2_groupctrl.wt
post_fix_na_pc2$wt_eda<-post_fix_na_pc2$sca_ctrl+post_fix_na_pc2$b_walkpc2_groupeda.wt
post_fix_na_pc2$sca_eda<-post_fix_na_pc2$sca_ctrl+post_fix_na_pc2$b_walkpc2_groupeda.sca
post_fix_na_pc2$wt_contrast<-post_fix_na_pc2$wt_eda-post_fix_na_pc2$wt_ctrl

post_fix_adj_pc2<-as.data.frame(pc_mult2, variable = c("b_walkpc2_Intercept","b_walkpc2_groupctrl.wt",
                                                       "b_walkpc2_groupeda.wt","b_walkpc2_groupeda.sca"))
names(post_fix_adj_pc2)[1]<-"sca_ctrl"
post_fix_adj_pc2$wt_ctrl<-post_fix_adj_pc2$sca_ctrl+post_fix_adj_pc2$b_walkpc2_groupctrl.wt
post_fix_adj_pc2$wt_eda<-post_fix_adj_pc2$sca_ctrl+post_fix_adj_pc2$b_walkpc2_groupeda.wt
post_fix_adj_pc2$sca_eda<-post_fix_adj_pc2$sca_ctrl+post_fix_adj_pc2$b_walkpc2_groupeda.sca
post_fix_adj_pc2$wt_contrast<-post_fix_adj_pc2$wt_eda-post_fix_adj_pc2$wt_ctrl

## Posterior extraction PC3
post_fix_na_pc3<-as.data.frame(pc_mult1, variable = c("b_walkpc3_Intercept","b_walkpc3_groupctrl.wt",
                                                      "b_walkpc3_groupeda.wt","b_walkpc3_groupeda.sca"))
names(post_fix_na_pc3)[1]<-"sca_ctrl"
post_fix_na_pc3$wt_ctrl<-post_fix_na_pc3$sca_ctrl+post_fix_na_pc3$b_walkpc3_groupctrl.wt
post_fix_na_pc3$wt_eda<-post_fix_na_pc3$sca_ctrl+post_fix_na_pc3$b_walkpc3_groupeda.wt
post_fix_na_pc3$sca_eda<-post_fix_na_pc3$sca_ctrl+post_fix_na_pc3$b_walkpc3_groupeda.sca
post_fix_na_pc3$wt_contrast<-post_fix_na_pc3$wt_eda-post_fix_na_pc3$wt_ctrl

post_fix_adj_pc3<-as.data.frame(pc_mult2, variable = c("b_walkpc3_Intercept","b_walkpc3_groupctrl.wt",
                                                       "b_walkpc3_groupeda.wt","b_walkpc3_groupeda.sca"))
names(post_fix_adj_pc3)[1]<-"sca_ctrl"
post_fix_adj_pc3$wt_ctrl<-post_fix_adj_pc3$sca_ctrl+post_fix_adj_pc3$b_walkpc3_groupctrl.wt
post_fix_adj_pc3$wt_eda<-post_fix_adj_pc3$sca_ctrl+post_fix_adj_pc3$b_walkpc3_groupeda.wt
post_fix_adj_pc3$sca_eda<-post_fix_adj_pc3$sca_ctrl+post_fix_adj_pc3$b_walkpc3_groupeda.sca
post_fix_adj_pc3$wt_contrast<-post_fix_adj_pc3$wt_eda-post_fix_adj_pc3$wt_ctrl
```


## Showing posterior probabilities 
```{r, fig.height=7.8, fig.width=8.6}

## plot setting and labeling
behav$group<-factor(behav$group,
                    levels=c('ctrl.wt','eda.wt','ctrl.sca','eda.sca'))

m <- matrix(c(9,1,2,3,
              4,6,7,8,
              5,6,7,8), nrow = 3, ncol=4 ,byrow = TRUE)
layout(mat = m,heights = c(0.06,0.94/2,0.94/2),
       widths = c(0.07,0.31,0.31,0.31))
par(mgp=c(1.6,0.58,0))
par(mar=c(0,0,0,0))

plot(NULL,xlim=c(-1,1),ylim=c(-1,1),xlab="",ylab="",axes=F)
text(0,0.5,"PC1",xpd=T,cex=1.8)
text(0,-0.65,"fast walk & swings, long strides",xpd=T,cex=1.6,font=3)

plot(NULL,xlim=c(-1,1),ylim=c(-1,1),xlab="",ylab="",axes=F)
text(0.0,0.5,"PC2",xpd=T,cex=1.8)
text(0.0,-0.65,"inconsistent walk",xpd=T,cex=1.5,font=3)

plot(NULL,xlim=c(-1,1),ylim=c(-1,1),xlab="",ylab="",axes=F)
text(0.0,0.5,"PC3",xpd=T,cex=1.8)
text(0.0,-0.65,"support with 0 or 1 legs",xpd=T,cex=1.6,font=3)

plot(NULL,xlim=c(-1,1),ylim=c(-1,1),xlab="",ylab="",axes=F)
text(-0.5,0,"Original PC values",xpd=T,cex=1.5,srt=90)
lines(c(0,0),c(-1,1))
lines(c(0,0.2),c(-1,-1))
lines(c(0,0.2),c(1,1))

plot(NULL,xlim=c(-1,1),ylim=c(-1,1),xlab="",ylab="",axes=F)
text(-0.5,0,"Adjusted for speed",xpd=T,cex=1.5,srt=90)
lines(c(0,0),c(-1,1))
lines(c(0,0.2),c(-1,-1))
lines(c(0,0.2),c(1,1))

## posterior probability distributions
par(mar=c(2,0,0,0))
dif<-data.frame(post_fix_adj_pc1$wt_contrast,post_fix_adj_pc1$b_walkpc1_groupeda.sca,
                post_fix_adj_pc1$b_walkpc1_groupctrl.wt,
                post_fix_na_pc1$wt_contrast,post_fix_na_pc1$b_walkpc1_groupeda.sca,
                post_fix_na_pc1$b_walkpc1_groupctrl.wt)
tckk=-0.018
ste<-seq(-2,2,by=0.5)
yla = ''
mons_poste6(dif, 0)
text(0,-0.06,expression(beta[PC1]),xpd=T,cex=1.7)


zpos=seq(0,1,1/6)
xx=1;ind=0.3;xpol<- -0.6
text(xpol,zpos[xx]+zpos[2]*ind,
     "Wt: ed x 0 ",cex=1.3,xpd=T,font=2)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "SCA1: ed x 0 ",cex=1.3,font=2)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "0: Wt x SCA1",cex=1.3,font=2)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "Wt: ed x 0 ",cex=1.3,xpd=T,font=2)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "SCA1: ed x 0 ",cex=1.3,font=2)
xx=xx+1

text(xpol,zpos[xx]+zpos[2]*ind,
     "0: Wt x SCA1",cex=1.3,font=2)



dif<-data.frame(post_fix_adj_pc2$wt_contrast,post_fix_adj_pc2$b_walkpc2_groupeda.sca,
                post_fix_adj_pc2$b_walkpc2_groupctrl.wt,
                post_fix_na_pc2$wt_contrast,post_fix_na_pc2$b_walkpc2_groupeda.sca,
                post_fix_na_pc2$b_walkpc2_groupctrl.wt)
tckk=-0.018
ste<-seq(-1.5,1.5,by=0.5)
mons_poste6(dif,0)
text(0,-0.06,expression(beta[PC2]),xpd=T,cex=1.7, xpd = TRUE)



dif<-data.frame(post_fix_adj_pc3$wt_contrast,post_fix_adj_pc3$b_walkpc3_groupeda.sca,
                post_fix_adj_pc3$b_walkpc3_groupctrl.wt,
                post_fix_na_pc3$wt_contrast,post_fix_na_pc3$b_walkpc3_groupeda.sca,
                post_fix_na_pc3$b_walkpc3_groupctrl.wt)
tckk=-0.018
ste<-seq(-1.5,1.5,by=0.5)
mons_poste6(dif,0)
text(0,-0.06,expression(beta[PC3]),xpd=T,cex=1.7, xpd = TRUE)
```
